{"version":3,"sources":["webpack://reconnect.life/./src/components/navigation/Pagination.js","webpack://reconnect.life/./src/components/cards/VerticalCard.js","webpack://reconnect.life/./src/components/cards/FeaturedPost.js","webpack://reconnect.life/./src/pages/index.js"],"names":["PageLink","styled","Link","CurrentPage","numPages","currentPage","rootSlug","pageLinks","i","slug","push","key","to","prevSlug","nextSlug","prevBtn","nextBtn","Root","Thumbnail","Title","TitleLink","headerFont","EntryDetails","Excerpt","ReadMoreButton","title","featuredImage","author","date","timeToRead","excerpt","style","backgroundImage","getMonth","getUTCDate","getFullYear","slice","smallWidth","Featured","Card","mobileWidth","Column","ColumnTitle","Home","props","data","authors","site","siteMetadata","posts","allMdx","edges","featuredPost","node","featuredTitle","frontmatter","featuredAuthor","find","d","id","Meta","description","name","Date","filter","map","Pagination","Math","ceil","length"],"mappings":"oJAIMA,GAAWC,QAAOC,QAAV,uEAAGD,CAAH,uKAcRE,EAAcF,qBAAH,+DAAGA,CAAH,yHA2DjB,IAlDmB,SAAC,GAAuC,IAAtCG,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAC1C,GAAIF,EAAU,CAEZ,IADA,IAAMG,EAAY,GACTC,EAAI,EAAGA,EAAIJ,EAAUI,IAAK,CACjC,IAAIC,EAAOH,EAAW,UAAYE,EAAI,GAClCA,EAAI,IAAM,IACZC,EAAOH,GAAsB,KAE3BE,EAAI,IAAMH,EACZE,EAAUG,KACR,gBAACP,EAAD,CAAaQ,IAAK,WAAaF,GAC5BD,EAAI,IAITD,EAAUG,KACR,gBAACV,EAAD,CAAUY,GAAIH,EAAME,IAAKF,GACtBD,EAAI,IAMb,IAAMK,EAAWR,EAAc,EAC3BC,EAAW,UAAYD,EAAc,GACpCC,GAAsB,IACrBQ,EAAWR,EAAW,UAAYD,EAAc,GAEhDU,EAAUV,EAAc,EAC5B,gBAACL,EAAD,CAAUY,GAAIC,EAAUF,IAAK,QAAUE,GACpC,KAED,KACEG,EAAUX,EAAcD,EAC5B,gBAACJ,EAAD,CAAUY,GAAIE,EAAUH,IAAK,QAAUG,GACpC,KAED,KAEJ,OACE,2BACGC,EACAR,EACAS,GAIP,OAAO,O,gICrEHC,EAAOhB,oBAAH,8DAAGA,CAAH,iMAUJiB,GAAYjB,QAAOC,QAAV,8EAAGD,CAAH,iKAUTkB,EAAQlB,mBAAH,+DAAGA,CAAH,wDAMLmB,GAAYnB,QAAOC,QAAV,8EAAGD,CAAH,yHAGEoB,MASXC,EAAerB,oBAAH,sEAAGA,CAAH,wFAQZsB,EAAUtB,kBAAH,iEAAGA,CAAH,yCAKPuB,GAAiBvB,QAAOC,QAAV,mFAAGD,CAAH,8OA4CpB,EA1BqB,SAAC,GAAmE,IAAlEW,EAAiE,EAAjEA,GAAIa,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QACzE,OACE,gBAACb,EAAD,KACE,gBAACC,EAAD,CACEN,GAAIA,EACJmB,MAAO,CAACC,gBAAgB,gBAAiBN,EAAlB,QAEzB,gBAACP,EAAD,KACE,gBAACC,EAAD,CAAWR,GAAIA,GAAKa,IAEtB,gBAACH,EAAD,KACGM,EAAKK,WAAa,EADrB,IACyBL,EAAKM,aAD9B,IAC6CN,EAAKO,cADlD,MACoER,EAClE,2BACCE,EAHH,gBAKA,gBAACN,EAAD,KACGO,EAAQM,MAAM,EAAG,KAAO,IACzB,2BACA,gBAACZ,EAAD,CAAgBZ,GAAIA,GAApB,yBCvFFK,EAAOhB,oBAAH,8DAAGA,CAAH,4OAWaoC,MAOjBC,EAAWrC,mBAAH,kEAAGA,CAAH,+KAaRsC,EAAOtC,oBAAH,8DAAGA,CAAH,yWAiBaoC,MAUjBlB,EAAQlB,mBAAH,+DAAGA,CAAH,yCAILmB,GAAYnB,QAAOC,QAAV,8EAAGD,CAAH,qNAIEoB,KAQMgB,MAMjBf,EAAerB,oBAAH,sEAAGA,CAAH,6IAQKoC,MAKjBd,EAAUtB,kBAAH,iEAAGA,CAAH,iKAOUoC,MAMjBb,GAAiBvB,QAAOC,QAAV,mFAAGD,CAAH,wYAiBGoC,MA0CvB,EA7BqB,SAAC,GAAmE,IAAlEzB,EAAiE,EAAjEA,GAAIa,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QACzE,OACE,gBAAC,EAAD,CACEC,MAAO,CAACC,gBAAgB,gBAAiBN,EAAlB,OAEvB,2BAAK,gBAACY,EAAD,kBACL,gBAACC,EAAD,KACE,gBAAC,EAAD,KACE,gBAAC,EAAD,CAAW3B,GAAIA,GACZa,IAGL,gBAAC,EAAD,KACGG,EAAKK,WAAa,EADrB,IACyBL,EAAKM,aAD9B,IAC6CN,EAAKO,cADlD,MACoER,EAClE,2BACCE,EAHH,gBAKA,gBAAC,EAAD,KACGC,EACD,2BACA,gBAAC,EAAD,CAAgBlB,GAAIA,GAApB,0B,oBCvJJK,EAAOhB,oBAAH,mDAAGA,CAAH,2UAcauC,KAGAH,MAKjBI,EAASxC,oBAAH,qDAAGA,CAAH,kCAINyC,EAAczC,mBAAH,0DAAGA,CAAH,6JAYF,SAAS0C,EAAKC,GAC3B,IAAOC,EAAQD,EAARC,KACCC,EAAYD,EAAKE,KAAKC,aAAtBF,QACFG,EAAQJ,EAAKK,OAAOC,MACpBC,EAAeH,EAAM,GAAGI,KACxBC,EAAgBF,EAAaG,YAAY9B,OAAS2B,EAAa3C,KAC/D+C,EAAiBV,EAAQW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOP,EAAaG,YAAY5B,UAC3E,OACE,gBAAC,IAAD,KACE,gBAACiC,EAAA,EAAD,CACEC,YAAa,mGAEf,gBAAC,EAAD,KACE,gBAAC,EAAD,CACElD,IAAKyC,EAAa3C,KAClBG,GAAI,IAAMwC,EAAa3C,KACvBgB,MAAO6B,EACP5B,cAAe0B,EAAaG,YAAY7B,cACxCC,OAAQ6B,aAAF,EAAEA,EAAgBM,KACxBlC,KAAM,IAAImC,KAAKX,EAAaG,YAAY3B,MACxCC,WAAYuB,EAAavB,WACzBC,QAASsB,EAAatB,UAExB,gBAACW,EAAD,KACE,gBAACC,EAAD,oBACCO,EAAMe,QAAO,SAACN,EAAGlD,GAAJ,OAAUA,GAAKA,EAAI,MAAIyD,KAAI,YAAe,IAAZZ,EAAW,EAAXA,KACpC5B,EAAQ4B,EAAKE,YAAY9B,OAAS4B,EAAK5C,KACvCkB,EAASmB,EAAQW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAON,EAAKE,YAAY5B,UAC3D,OACE,gBAAC,EAAD,CACEhB,IAAK0C,EAAK5C,KACVG,GAAI,IAAMyC,EAAK5C,KACfgB,MAAOA,EACPC,cAAe2B,EAAKE,YAAY7B,cAChCC,OAAQA,aAAF,EAAEA,EAAQmC,KAChBlC,KAAM,IAAImC,KAAKV,EAAKE,YAAY3B,MAChCC,WAAYwB,EAAKxB,WACjBC,QAASuB,EAAKvB,aAIpB,gBAACoC,EAAA,EAAD,CACE7D,YAAa,EACbD,SAAU+D,KAAKC,KAAKnB,EAAMoB,OAAS,IACnC/D,SAAU","file":"component---src-pages-index-js-1ad300d50f3a2fcd7ea5.js","sourcesContent":["import React from 'react';\nimport {Link} from 'gatsby';\nimport styled from 'styled-components';\n\nconst PageLink = styled(Link)`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  margin-right: 0.25rem;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #366454;\n    color: #EFEBE2;\n  }\n`;\n\nconst CurrentPage = styled.span`\n  display: inline-block;\n  padding: 4px 8px;\n  margin-right: 0.25rem;\n  background-color: #366454;\n  color: #EFEBE2;\n  border-radius: 4px;\n`;\n\nconst Pagination = ({numPages, currentPage, rootSlug}) => {\n  if (numPages) {\n    const pageLinks = [];\n    for (let i = 0; i < numPages; i++) {\n      let slug = rootSlug + '/page/' + (i + 1);\n      if (i + 1 === 1) {\n        slug = rootSlug ? rootSlug : '/';\n      }\n      if (i + 1 === currentPage) {\n        pageLinks.push(\n          <CurrentPage key={'current-' + slug}>\n            {i + 1}\n          </CurrentPage>\n        );\n      } else {\n        pageLinks.push(\n          <PageLink to={slug} key={slug}>\n            {i + 1}\n          </PageLink>\n        );\n      }\n    }\n\n    const prevSlug = currentPage > 2\n      ? rootSlug + '/page/' + (currentPage - 1)\n      : (rootSlug ? rootSlug : '/');\n    const nextSlug = rootSlug + '/page/' + (currentPage + 1);\n\n    const prevBtn = currentPage > 1 ? (\n      <PageLink to={prevSlug} key={'prev-' + prevSlug}>\n        {'←'}\n      </PageLink>\n    ) : null;\n    const nextBtn = currentPage < numPages ? (\n      <PageLink to={nextSlug} key={'next-' + nextSlug}>\n        {'→'}\n      </PageLink>\n    ) : null;\n\n    return (\n      <div>\n        {prevBtn}\n        {pageLinks}  \n        {nextBtn}\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default Pagination;\n","import React from 'react';\nimport {Link} from 'gatsby';\nimport styled from 'styled-components';\nimport {headerFont} from '../../Utils';\n\nconst Root = styled.div`\n  background-color: rgba(255, 255, 255, 0.9);\n  padding: 20px 20px 16px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0px 0px 10px 1px rgb(34 39 39 / 10%);\n  margin-bottom: 36px;\n  position: relative;\n`;\n\nconst Thumbnail = styled(Link)`\n  display: block;\n  border-radius: 4px 4px 0 0;\n  height: 20vw;\n  min-height: 190px;\n  background-size: cover;\n  background-position: center center;\n  margin: -20px -20px 20px -20px;\n`;\n\nconst Title = styled.h2`\n  font-size: 23px;\n  margin-bottom: 16px;\n  line-height: 1.2;\n`;\n\nconst TitleLink = styled(Link)`\n  color: #222727;\n  text-decoration: none;\n  font-family: ${headerFont};\n  font-weight: 700;\n\n  &:hover {\n    text-decoration: underline;\n    color: #488570;\n  }\n`;\n\nconst EntryDetails = styled.div`\n  font-size: 14px;\n  color: #697979;\n  font-style: italic;\n  margin-bottom: 16px;\n  line-height: 1.5;\n`;\n\nconst Excerpt = styled.p`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ReadMoreButton = styled(Link)`\n  display: inline-block;\n  border: solid 1px #366454;\n  color: #366454;\n  padding: 4px;\n  border-radius: 4px;\n  margin-top: 16px;\n  margin-left: auto;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    text-decoration: none;\n    background-color: #366454;\n    color: #EFEBE2;\n  }\n`;\n\nconst VerticalCard = ({to, title, featuredImage, author, date, timeToRead, excerpt}) => {\n  return (\n    <Root>\n      <Thumbnail\n        to={to}\n        style={{backgroundImage: `url(\"/images/${featuredImage}\")`}}\n      />\n      <Title>\n        <TitleLink to={to}>{title}</TitleLink>\n      </Title>\n      <EntryDetails>\n        {date.getMonth() + 1}.{date.getUTCDate()}.{date.getFullYear()} - {author}\n        <br />\n        {timeToRead} minute read\n      </EntryDetails>\n      <Excerpt>\n        {excerpt.slice(0, 145) + '…'}\n        <br />\n        <ReadMoreButton to={to}>\n          Continue Reading »\n        </ReadMoreButton>\n      </Excerpt>\n    </Root>\n  );\n}\n\nexport default VerticalCard;\n","import React from 'react';\nimport {Link} from 'gatsby';\nimport styled from 'styled-components';\nimport {smallWidth, headerFont} from '../../Utils';\n\nconst Root = styled.div`\n  position: sticky;\n  top: 0;\n  height: 100vh;\n  width: 100%;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${smallWidth}px) {\n    position: relative;\n    height: auto;\n    min-height: 100vh;\n  }\n`;\n\nconst Featured = styled.h3`\n  text-align: center;\n  font-size: 21px;\n  color: #fff;\n  max-width: 200px;\n  border-bottom: solid 1px #fff;\n  margin: 0 auto 0;\n  font-weight: 500;\n  letter-spacing: 0.3px;\n  position: relative;\n  top: 20px;\n`;\n\nconst Card = styled.div`\n  margin-top: auto;\n  padding: 0 5% 20px 5%;\n  width: 100%;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -250px;\n    bottom: 0;\n    background: linear-gradient(to bottom, transparent 0%, #222727 100%);\n    z-index: -1;\n  }\n\n  @media (max-width: ${smallWidth}px) {\n    margin: 60px 20px 60px;\n    width: auto;\n    padding: 12px;\n    position: static;\n    background: rgba(239, 235, 226, 0.8);\n    border-radius: 8px;\n  }\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 16px;\n  line-height: 1.2;\n`;\nconst TitleLink = styled(Link)`\n  color: #EFEBE2;\n  font-size: 45px;\n  text-decoration: none;\n  font-family: ${headerFont};\n  position: relative;\n\n  &:hover {\n    color: #222727;\n    background-color: #EFEBE2;\n  }\n\n  @media (max-width: ${smallWidth}px) {\n    color: #222727;\n    border-color: #9eaaaa;\n    font-size: 32px;\n  }\n`;\nconst EntryDetails = styled.div`\n  font-size: 14px;\n  color: #EFEBE2;\n  font-style: italic;\n  display: block;\n  margin-bottom: 20px;\n  line-height: 1.5;\n\n  @media (max-width: ${smallWidth}px) {\n    color: #222727;\n  }\n`;\n\nconst Excerpt = styled.p`\n  color: #EFEBE2;\n  border-top: solid 1px #EFEBE2;\n  padding-top: 27px;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${smallWidth}px) {\n    color: #222727;\n    border-color: #9eaaaa;\n  }\n`;\n\nconst ReadMoreButton = styled(Link)`\n  display: inline-block;\n  border: solid 1px #EFEBE2;\n  color: #EFEBE2;\n  padding: 4px;\n  border-radius: 4px;\n  margin-top: 16px;\n  margin-left: auto;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    text-decoration: none;\n    background-color: #EFEBE2;\n    color: #222727;\n  }\n\n  @media (max-width: ${smallWidth}px) {\n    color: #EFEBE2;\n    border-color: #366454;\n    background-color: #366454;\n\n    &:hover {\n      color: #EFEBE2;\n      background-color: #447e6a;\n      border-color: #447e6a;\n    }\n  }\n`;\n\nconst FeaturedPost = ({to, title, featuredImage, author, date, timeToRead, excerpt}) => {\n  return (\n    <Root\n      style={{backgroundImage: `url(\"/images/${featuredImage}\")`}}\n    >\n      <div><Featured>Featured</Featured></div>\n      <Card>\n        <Title>\n          <TitleLink to={to}>\n            {title}\n          </TitleLink>\n        </Title>\n        <EntryDetails>\n          {date.getMonth() + 1}.{date.getUTCDate()}.{date.getFullYear()} - {author}\n          <br />\n          {timeToRead} minute read\n        </EntryDetails>\n        <Excerpt>\n          {excerpt}\n          <br />\n          <ReadMoreButton to={to}>\n            Continue Reading »\n          </ReadMoreButton>\n        </Excerpt>\n      </Card>\n    </Root>\n  );\n}\n\nexport default FeaturedPost;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BaseLayout from '../components/layouts/base'\nimport VerticalCard from '../components/cards/VerticalCard';\nimport FeaturedPost from '../components/cards/FeaturedPost';\nimport Pagination from '../components/navigation/Pagination';\nimport styled from 'styled-components';\nimport {mobileWidth, smallWidth} from '../Utils';\nimport Meta from '../components/Meta';\n\nconst Root = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 60vw 1fr;\n\n  @media (max-width: 1680px) {\n    grid-template-columns: 55vw 1fr;\n  }\n  @media (max-width: 1500px) {\n    grid-template-columns: 50vw 1fr;\n  }\n  @media (max-width: 1180px) {\n    grid-template-columns: 45vw 1fr;\n  }\n  @media (max-width: ${mobileWidth}px) {\n    grid-template-columns: 50vw 1fr;\n  }\n  @media (max-width: ${smallWidth}px) {\n    display: block;\n  }\n`;\n\nconst Column = styled.div`\n  padding: 20px 30px 60px 35px;\n`;\n\nconst ColumnTitle = styled.h3`\n  text-align: center;\n  font-size: 21px;\n  color: #525d5d;\n  max-width: 200px;\n  border-bottom: solid 1px #839292;\n  margin: 0 auto 30px;\n  font-weight: 500;\n  letter-spacing: 0.3px;\n`;\n\n\nexport default function Home(props) {\n  const {data} = props;\n  const { authors } = data.site.siteMetadata\n  const posts = data.allMdx.edges;\n  const featuredPost = posts[0].node;\n  const featuredTitle = featuredPost.frontmatter.title || featuredPost.slug;\n  const featuredAuthor = authors.find(d => d.id === featuredPost.frontmatter.author)\n  return (\n    <BaseLayout>\n      <Meta\n        description={\"Experience the world on your feet, not on your phone. Read about hiking trips, gear, and tips.\"}\n      />\n      <Root>\n        <FeaturedPost\n          key={featuredPost.slug}\n          to={'/' + featuredPost.slug}\n          title={featuredTitle}\n          featuredImage={featuredPost.frontmatter.featuredImage}\n          author={featuredAuthor?.name}\n          date={new Date(featuredPost.frontmatter.date)}\n          timeToRead={featuredPost.timeToRead}\n          excerpt={featuredPost.excerpt}\n        />\n        <Column>\n          <ColumnTitle>Older Posts</ColumnTitle>\n          {posts.filter((d, i) => i && i < 10).map(({ node }) => {\n            const title = node.frontmatter.title || node.slug;\n            const author = authors.find(d => d.id === node.frontmatter.author)\n            return (\n              <VerticalCard\n                key={node.slug}\n                to={'/' + node.slug}\n                title={title}\n                featuredImage={node.frontmatter.featuredImage}\n                author={author?.name}\n                date={new Date(node.frontmatter.date)}\n                timeToRead={node.timeToRead}\n                excerpt={node.excerpt}\n              />\n            );\n          })}\n          <Pagination\n            currentPage={1}\n            numPages={Math.ceil(posts.length / 10)}\n            rootSlug={''}\n          />\n        </Column>\n      </Root>\n    </BaseLayout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query MetadataQuery {\n    site {\n      siteMetadata {\n        authors {\n          id\n          name\n        }\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC },\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            author\n            date\n            path\n            title\n            featuredImage\n          }\n          slug\n          timeToRead\n          excerpt(truncate: false, pruneLength: 350)\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}